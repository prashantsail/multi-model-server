version: 2.1
jobs:
    build_frontend:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - checkout
        - run:
            name: Build frontend
            command: |
              ./frontend/gradlew -p frontend clean fJ assemble
              mkdir -p mms/frontend
              cp frontend/server/build/libs/server-1.0.jar mms/frontend/model-server.jar
        - run: rm -rf .git  # Remove repository info to save size
        - persist_to_workspace:
            root: .
            paths:
              - .

    gradle_testng:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute gradle testng
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              ./frontend/gradlew -p frontend clean fJ test
        - store_artifacts:
            name: Store gradle testng results
            path: frontend/server/build/reports/tests/test
            destination: frontend-results

    python_unit_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute python unit tests
            command: |
              python -m pytest --cov-report html:htmlcov --cov=mms/ mms/tests/unit_tests/
        - store_artifacts:
            name: Store python Test results
            path: htmlcov
            destination: pytest-results

    api_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Start server, Execute API Tests
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              mkdir test/report
              mkdir test/model_store

              multi-model-server --start --model-store test/model_store >> mms_management.log 2>&1
              sleep 10
              newman run -e test/postman/environment.json --verbose test/postman/management_api_test_collection.json -r cli,html --reporter-html-export test/report/management_report.html
              multi-model-server --stop

              multi-model-server --start --model-store test/model_store >> mms_inference.log 2>&1
              sleep 10
              newman run -e test/postman/environment.json --verbose test/postman/inference_api_test_collection.json -r cli,html --reporter-html-export test/report/inference_report.html
              multi-model-server --stop

              multi-model-server --start --mms-config test/resources/config.properties --model-store test/model_store >> mms_https.log 2>&1
              sleep 10
              newman run -e test/postman/environment.json --verbose test/postman/https_test_collection.json -r cli,html --reporter-html-export test/report/https_report.html
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from API tests
            path: docker/mms.log
            destination: mmslog
        - store_artifacts:
            name: Store API test results
            path: test/report
            destination: api-results

    benchmark:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Start server, Execute benchmark tests
            command: |
              mkdir -p /home/ubuntu/.linuxbrew/Cellar/jmeter/5.3/libexec/bin/
              ln -s /opt/apache-jmeter-5.3/bin/jmeter /home/ubuntu/.linuxbrew/Cellar/jmeter/5.3/libexec/bin/jmeter
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start
              sleep 30
              cd benchmarks
              python benchmark.py latency
              multi-model-server --stop
        - store_artifacts:
            name: Store Benchmark Latency resnet-18 results
            path: /tmp/MMSBenchmark/out/latency/resnet-18/report/
            destination: benchmark-latency-resnet-18

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_frontend
      - gradle_testng:
          requires:
            - build_frontend
      - python_unit_tests:
          requires:
            - build_frontend
      - api_tests:
          requires:
            - build_frontend
      - benchmark:
          requires:
            - build_frontend