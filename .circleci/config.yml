version: 2.1
jobs:
    build_frontend:
      docker:
        - image: prashantsail/mms-build:latest
      resource_class: small
      steps:
        - checkout
        - run:
            name: Build frontend
            command: .circleci/scripts/linux_build_frontend.sh
        - run:
            name: Optimize before moving to workspace
            command: rm -rf .git  # Save disk space & time required for copy to\from workspace
        - persist_to_workspace:
            root: .
            paths:
              - .

    gradle_testng:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute gradle testng
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_frontend.sh
        - store_artifacts:
            name: Store gradle testng results
            path: frontend/server/build/reports/tests/test

    python_unit_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute python unit tests
            command: .circleci/scripts/linux_test_python.sh
        - store_artifacts:
            name: Store python Test results
            path: htmlcov

    api_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        # MANAGEMENT API Tests
        - run:
            name: Start MMS, Execute Management API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_api.sh management
        - store_artifacts:
            name: Store server logs from management API tests
            path: mms_management.log
        - store_artifacts:
            name: Store management API test results
            path: test/management-api-report.html
        # INFERENCE API Tests
        - run:
            name: Start MMS, Execute Inference API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_api.sh inference
        - store_artifacts:
            name: Store server logs from inference API tests
            path: mms_inference.log
        - store_artifacts:
            name: Store inference API test results
            path: test/inference-api-report.html
        # HTTPS API Tests
        - run:
            name: Start MMS, Execute https API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_api.sh https
        - store_artifacts:
            name: Store server logs from https API tests
            path: mms_https.log
        - store_artifacts:
            name: Store https API test results
            path: test/https-api-report.html

    benchmark:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Start MMS, Execute benchmark tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_benchmark.sh
        - store_artifacts:
            name: Store server logs from benchmark tests
            path: mms.log
        - store_artifacts:
            name: Store Benchmark Latency resnet-18 results
            path: /tmp/MMSBenchmark/out/latency/resnet-18/report/
            destination: benchmark-latency-resnet-18

    taurus:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Install Taurus
            command: |
              pip install bzt
        - run:
            name: Start MMS, Execute Taurus testcases, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              .circleci/scripts/linux_test_benchmark.sh
        - store_artifacts:
            name: Store server logs from Taurus tests
            path: mms.log
        - store_artifacts:
            name: Store Taurus results
            path: /tmp/cci-taurus/
            destination: taurus-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_frontend
      - gradle_testng:
          requires:
            - build_frontend
      - python_unit_tests:
          requires:
            - build_frontend
      - api_tests:
          requires:
            - build_frontend
      - benchmark:
          requires:
            - build_frontend
      - taurus:
          requires:
            - build_frontend