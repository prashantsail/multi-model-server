version: 2.1
jobs:
    build_frontend:
      docker:
        - image: prashantsail/mms-build:latest
      resource_class: small
      steps:
        - checkout
        - run:
            name: Build frontend
            command: |
              ./frontend/gradlew -p frontend clean fJ assemble
              mkdir -p mms/frontend
              cp frontend/server/build/libs/server-1.0.jar mms/frontend/model-server.jar
        - run:
            name: Optimize before moving to workspace
            command: |
              rm -rf .git
        - persist_to_workspace:
            root: .
            paths:
              - .

    gradle_testng:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute gradle testng
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              ./frontend/gradlew -p frontend clean fJ test
        - store_artifacts:
            name: Store gradle testng results
            path: frontend/server/build/reports/tests/test

    python_unit_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Execute python unit tests
            command: |
              python -m pytest --cov-report html:htmlcov --cov=mms/ mms/tests/unit_tests/
        - store_artifacts:
            name: Store python Test results
            path: htmlcov

    api_tests:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Setup directories
            command: |
              mkdir test/management-api/
              mkdir test/inference-api/
              mkdir test/https-api/
              mkdir test/model_store
        # MANAGEMENT API Tests
        - run:
            name: Start MMS, Execute Management API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start --model-store test/model_store >> mms_management.log 2>&1
              sleep 10
              newman run -e test/postman/environment.json \
                         --verbose test/postman/management_api_test_collection.json \
                         -r cli,html --reporter-html-export test/management-api/management-api-report.html
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from management API tests
            path: mms_management.log
        - store_artifacts:
            name: Store management API test results
            path: test/management-api
        # INFERENCE API Tests
        - run:
            name: Start MMS, Execute Inference API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start --model-store test/model_store >> mms_inference.log 2>&1
              sleep 10
              newman run -e test/postman/environment.json \
                         --verbose test/postman/inference_api_test_collection.json \
                         -d test/postman/inference_data.json \
                         -r cli,html --reporter-html-export test/inference-api/inference-api-report.html
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from inference API tests
            path: mms_inference.log
        - store_artifacts:
            name: Store inference API test results
            path: test/inference-api
        # HTTPS API Tests
        - run:
            name: Start MMS, Execute https API Tests, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start --mms-config test/resources/config.properties \
                                 --model-store test/model_store >> mms_https.log 2>&1
              sleep 10
              newman run --insecure -e test/postman/environment.json \
                         --verbose test/postman/https_test_collection.json \
                         -r cli,html --reporter-html-export test/https-api/https-api-report.html
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from https API tests
            path: mms_https.log
        - store_artifacts:
            name: Store https API test results
            path: test/https-api

    benchmark:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Start MMS, Execute benchmark tests, Stop MMS
            command: |
              mkdir -p /home/ubuntu/.linuxbrew/Cellar/jmeter/5.3/libexec/bin/
              ln -s /opt/apache-jmeter-5.3/bin/jmeter /home/ubuntu/.linuxbrew/Cellar/jmeter/5.3/libexec/bin/jmeter
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start >> mms.log 2>&1
              sleep 30
              cd benchmarks
              python benchmark.py latency
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from benchmark tests
            path: mms.log
        - store_artifacts:
            name: Store Benchmark Latency resnet-18 results
            path: /tmp/MMSBenchmark/out/latency/resnet-18/report/
            destination: benchmark-latency-resnet-18

    taurus:
      docker:
        - image: prashantsail/mms-build:latest
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Install MMS
            command: |
              pip install .
        - run:
            name: Install Taurus
            command: |
              pip install bzt
        - run:
            name: Start MMS, Execute Taurus testcases, Stop MMS
            command: |
              export _JAVA_OPTIONS="-Xmx1024m"
              multi-model-server --start --models squeezenet=https://s3.amazonaws.com/model-server/model_archive_1.0/squeezenet_v1.1.mar >> mms.log 2>&1
              sleep 90
              cd taurus
              curl -O https://s3.amazonaws.com/model-server/inputs/kitten.jpg
              bzt -o modules.jmeter.path=/opt/apache-jmeter-5.3/bin/jmeter \
                  -o settings.artifacts-dir=/tmp/cci-taurus/ \
                  -o modules.console.disable=true \
                  imageInputModelPlan.jmx.yaml \
                  -report
              multi-model-server --stop
        - store_artifacts:
            name: Store server logs from Taurus tests
            path: mms.log
        - store_artifacts:
            name: Store Taurus results
            path: /tmp/cci-taurus/
            destination: taurus-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_frontend
      - gradle_testng:
          requires:
            - build_frontend
      - python_unit_tests:
          requires:
            - build_frontend
      - api_tests:
          requires:
            - build_frontend
      - benchmark:
          requires:
            - build_frontend
      - taurus:
          requires:
            - build_frontend

#